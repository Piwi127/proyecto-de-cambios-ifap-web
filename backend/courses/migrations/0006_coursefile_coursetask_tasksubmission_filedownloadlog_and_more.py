# Generated by Django 4.2.7 on 2025-09-24 13:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('courses', '0005_coursesyllabus_syllabusmodule_course_categories_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='CourseFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre del archivo', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Descripción del archivo')),
                ('file', models.FileField(help_text='Archivo subido', upload_to='course_files/%Y/%m/%d/')),
                ('file_type', models.CharField(choices=[('material', 'Material del curso'), ('assignment', 'Archivo de tarea'), ('submission', 'Entrega de estudiante'), ('resource', 'Recurso adicional'), ('syllabus', 'Temario'), ('presentation', 'Presentación'), ('document', 'Documento'), ('video', 'Video'), ('audio', 'Audio'), ('image', 'Imagen'), ('other', 'Otro')], default='material', max_length=20)),
                ('file_size', models.PositiveIntegerField(help_text='Tamaño del archivo en bytes')),
                ('mime_type', models.CharField(blank=True, help_text='Tipo MIME del archivo', max_length=100)),
                ('access_level', models.CharField(choices=[('public', 'Público'), ('enrolled', 'Solo estudiantes inscritos'), ('instructor', 'Solo instructores'), ('private', 'Privado')], default='enrolled', max_length=10)),
                ('is_downloadable', models.BooleanField(default=True, help_text='Permite descarga del archivo')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('download_count', models.PositiveIntegerField(default=0, help_text='Número de descargas')),
                ('last_downloaded', models.DateTimeField(blank=True, null=True)),
                ('is_featured', models.BooleanField(default=False, help_text='Archivo destacado')),
                ('order', models.PositiveIntegerField(default=0, help_text='Orden de visualización')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_files', to='courses.course')),
            ],
            options={
                'verbose_name': 'Archivo de Curso',
                'verbose_name_plural': 'Archivos de Cursos',
                'ordering': ['order', '-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='CourseTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Título de la tarea', max_length=200)),
                ('description', models.TextField(help_text='Descripción detallada de la tarea')),
                ('task_type', models.CharField(choices=[('assignment', 'Tarea'), ('project', 'Proyecto'), ('quiz', 'Quiz'), ('exam', 'Examen'), ('discussion', 'Discusión'), ('reading', 'Lectura'), ('video', 'Video'), ('practice', 'Práctica')], default='assignment', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Baja'), ('medium', 'Media'), ('high', 'Alta'), ('urgent', 'Urgente')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('draft', 'Borrador'), ('published', 'Publicada'), ('archived', 'Archivada')], default='draft', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('due_date', models.DateTimeField(blank=True, help_text='Fecha límite de entrega', null=True)),
                ('available_from', models.DateTimeField(blank=True, help_text='Fecha desde la cual está disponible', null=True)),
                ('max_score', models.PositiveIntegerField(default=100, help_text='Puntuación máxima')),
                ('allow_late_submission', models.BooleanField(default=False, help_text='Permitir entregas tardías')),
                ('late_penalty_percentage', models.PositiveIntegerField(default=0, help_text='Penalización por entrega tardía (%)')),
                ('max_attempts', models.PositiveIntegerField(default=1, help_text='Número máximo de intentos')),
                ('instructions', models.TextField(blank=True, help_text='Instrucciones específicas para la tarea')),
                ('resources', models.TextField(blank=True, help_text='Recursos adicionales o enlaces')),
                ('estimated_duration_minutes', models.PositiveIntegerField(default=60, help_text='Duración estimada en minutos')),
                ('is_group_task', models.BooleanField(default=False, help_text='Es una tarea grupal')),
                ('max_group_size', models.PositiveIntegerField(blank=True, help_text='Tamaño máximo del grupo', null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_tasks', to='courses.course')),
            ],
            options={
                'verbose_name': 'Tarea de Curso',
                'verbose_name_plural': 'Tareas de Cursos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, help_text='Contenido de texto de la entrega')),
                ('submission_text', models.TextField(blank=True, help_text='Texto adicional de la entrega')),
                ('status', models.CharField(choices=[('draft', 'Borrador'), ('submitted', 'Entregada'), ('graded', 'Calificada'), ('returned', 'Devuelta para revisión')], default='draft', max_length=10)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('score', models.DecimalField(blank=True, decimal_places=2, help_text='Puntuación obtenida', max_digits=5, null=True)),
                ('feedback', models.TextField(blank=True, help_text='Retroalimentación del instructor')),
                ('graded_at', models.DateTimeField(blank=True, null=True)),
                ('attempt_number', models.PositiveIntegerField(default=1)),
                ('is_late', models.BooleanField(default=False)),
                ('late_penalty_applied', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('graded_by', models.ForeignKey(blank=True, help_text='Usuario que calificó la entrega', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='graded_course_submissions', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_task_submissions', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_submissions', to='courses.coursetask')),
            ],
            options={
                'verbose_name': 'Entrega de Tarea',
                'verbose_name_plural': 'Entregas de Tareas',
                'ordering': ['-submitted_at', '-created_at'],
                'unique_together': {('task', 'student', 'attempt_number')},
            },
        ),
        migrations.CreateModel(
            name='FileDownloadLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('downloaded_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='download_logs', to='courses.coursefile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='file_downloads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Log de Descarga',
                'verbose_name_plural': 'Logs de Descargas',
                'ordering': ['-downloaded_at'],
            },
        ),
        migrations.AddField(
            model_name='coursefile',
            name='submission',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submission_files', to='courses.tasksubmission'),
        ),
        migrations.AddField(
            model_name='coursefile',
            name='task',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task_files', to='courses.coursetask'),
        ),
        migrations.AddField(
            model_name='coursefile',
            name='uploaded_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_course_files', to=settings.AUTH_USER_MODEL),
        ),
    ]
