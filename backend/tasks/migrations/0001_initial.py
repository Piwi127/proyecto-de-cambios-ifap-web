# Generated by Django 4.2.7 on 2025-09-19 23:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tasks.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('lessons', '0003_lessoncompletion'),
        ('courses', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('instructions', models.TextField(blank=True, help_text='Instrucciones detalladas para completar la tarea')),
                ('priority', models.CharField(choices=[('low', 'Baja'), ('medium', 'Media'), ('high', 'Alta'), ('urgent', 'Urgente')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('draft', 'Borrador'), ('published', 'Publicada'), ('closed', 'Cerrada')], default='draft', max_length=10)),
                ('max_score', models.DecimalField(decimal_places=2, default=100.0, max_digits=5)),
                ('due_date', models.DateTimeField(help_text='Fecha límite de entrega')),
                ('start_date', models.DateTimeField(blank=True, help_text='Fecha de inicio (opcional)', null=True)),
                ('allow_late_submission', models.BooleanField(default=False)),
                ('late_penalty_percent', models.DecimalField(decimal_places=2, default=0.0, help_text='Porcentaje de penalización por entrega tardía', max_digits=5)),
                ('max_attempts', models.PositiveIntegerField(default=1, help_text='Número máximo de intentos')),
                ('show_score_to_student', models.BooleanField(default=True)),
                ('attachment_required', models.BooleanField(default=False)),
                ('allowed_file_types', models.CharField(blank=True, help_text='Tipos de archivo permitidos (ej: pdf,doc,docx)', max_length=200)),
                ('max_file_size_mb', models.PositiveIntegerField(default=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Tarea',
                'verbose_name_plural': 'Tareas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('assigned', 'Asignada'), ('in_progress', 'En Progreso'), ('submitted', 'Entregada'), ('graded', 'Calificada'), ('returned', 'Devuelta para Revisión')], default='assigned', max_length=15)),
                ('assigned_date', models.DateTimeField(auto_now_add=True)),
                ('due_date_override', models.DateTimeField(blank=True, help_text='Fecha límite personalizada para este estudiante', null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_assignments', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='tasks.task')),
            ],
            options={
                'verbose_name': 'Asignación de Tarea',
                'verbose_name_plural': 'Asignaciones de Tareas',
                'ordering': ['-assigned_date'],
                'unique_together': {('task', 'student')},
            },
        ),
        migrations.CreateModel(
            name='TaskCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(default='#3B82F6', max_length=7)),
                ('icon', models.CharField(default='clipboard', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Categoría de Tarea',
                'verbose_name_plural': 'Categorías de Tareas',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TaskSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempt_number', models.PositiveIntegerField(default=1)),
                ('content', models.TextField(blank=True, help_text='Texto de la entrega')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('is_late', models.BooleanField(default=False)),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('feedback', models.TextField(blank=True)),
                ('graded_at', models.DateTimeField(blank=True, null=True)),
                ('is_final', models.BooleanField(default=True, help_text='Si es la entrega final o un borrador')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='tasks.taskassignment')),
                ('graded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='graded_submissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Entrega de Tarea',
                'verbose_name_plural': 'Entregas de Tareas',
                'ordering': ['-submitted_at'],
                'unique_together': {('assignment', 'attempt_number')},
            },
        ),
        migrations.CreateModel(
            name='TaskFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=tasks.models.TaskFile.file_upload_path)),
                ('original_name', models.CharField(max_length=255)),
                ('file_size', models.PositiveIntegerField()),
                ('file_type', models.CharField(max_length=50)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='tasks.tasksubmission')),
            ],
            options={
                'verbose_name': 'Archivo de Tarea',
                'verbose_name_plural': 'Archivos de Tareas',
            },
        ),
        migrations.CreateModel(
            name='TaskComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_private', models.BooleanField(default=False, help_text='Solo visible para instructores')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='tasks.tasksubmission')),
            ],
            options={
                'verbose_name': 'Comentario de Tarea',
                'verbose_name_plural': 'Comentarios de Tareas',
                'ordering': ['created_at'],
            },
        ),
        migrations.AddField(
            model_name='task',
            name='assigned_students',
            field=models.ManyToManyField(related_name='assigned_tasks', through='tasks.TaskAssignment', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='task',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tasks.taskcategory'),
        ),
        migrations.AddField(
            model_name='task',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='courses.course'),
        ),
        migrations.AddField(
            model_name='task',
            name='instructor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tasks', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='task',
            name='lesson',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='lessons.lesson'),
        ),
    ]
